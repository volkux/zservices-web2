{"remainingRequest":"C:\\Users\\mjenn\\Desktop\\New folder\\zservices-web2\\node_modules\\babel-loader\\lib\\index.js??ref--1-1!C:\\Users\\mjenn\\Desktop\\New folder\\zservices-web2\\node_modules\\gridsome\\app\\app.js","dependencies":[{"path":"C:\\Users\\mjenn\\Desktop\\New folder\\zservices-web2\\node_modules\\gridsome\\app\\app.js","mtime":1678315670702},{"path":"C:\\Users\\mjenn\\Desktop\\New folder\\zservices-web2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1678315671046},{"path":"C:\\Users\\mjenn\\Desktop\\New folder\\zservices-web2\\node_modules\\babel-loader\\lib\\index.js","mtime":1678315671014}],"contextDependencies":[],"result":["import Vue from 'vue';\nimport plugins from '~/.temp/plugins-server';\nimport * as main from '~/main';\nimport App from '~/App.vue';\nimport head from './head';\nimport router from './router';\nimport fetchPath from './fetchPath';\nimport { url } from './utils/helpers';\nimport graphqlGuard from './graphql/guard';\nimport graphqlMixin from './graphql/mixin';\nimport Link from './components/Link';\nimport Image from './components/Image';\nimport ClientOnly from './components/ClientOnly';\nVue.mixin(graphqlMixin);\nVue.component('GLink', Link);\nVue.component('GImage', Image);\nVue.component('ClientOnly', ClientOnly);\nVue.prototype.$url = url;\nVue.prototype.$fetch = fetchPath;\nrouter.beforeEach(graphqlGuard);\nconst context = {\n  appOptions: {\n    render: h => h(App, {\n      attrs: {\n        id: 'app'\n      }\n    }),\n    metaInfo: head,\n    methods: {},\n    data: {},\n    router\n  },\n  isServer: process.isServer,\n  isClient: process.isClient,\n  router,\n  head\n};\nrunPlugins(plugins);\nexport function runPlugins(plugins) {\n  for (const {\n    run,\n    options\n  } of plugins) {\n    if (typeof run === 'function') {\n      run(Vue, options, context);\n    }\n  }\n}\nexport function runMain() {\n  const defaultExport = 'default';\n  if (main && typeof main[defaultExport] === 'function') {\n    main[defaultExport](Vue, context);\n  }\n}\nexport default function createApp() {\n  return {\n    app: new Vue(context.appOptions),\n    router\n  };\n}",{"version":3,"names":["Vue","plugins","main","App","head","router","fetchPath","url","graphqlGuard","graphqlMixin","Link","Image","ClientOnly","mixin","component","prototype","$url","$fetch","beforeEach","context","appOptions","render","h","attrs","id","metaInfo","methods","data","isServer","process","isClient","runPlugins","run","options","runMain","defaultExport","createApp","app"],"sources":["C:/Users/mjenn/Desktop/New folder/zservices-web2/node_modules/gridsome/app/app.js"],"sourcesContent":["import Vue from 'vue'\nimport plugins from '~/.temp/plugins-server'\n\nimport * as main from '~/main'\nimport App from '~/App.vue'\n\nimport head from './head'\nimport router from './router'\nimport fetchPath from './fetchPath'\nimport { url } from './utils/helpers'\nimport graphqlGuard from './graphql/guard'\nimport graphqlMixin from './graphql/mixin'\n\nimport Link from './components/Link'\nimport Image from './components/Image'\nimport ClientOnly from './components/ClientOnly'\n\nVue.mixin(graphqlMixin)\nVue.component('GLink', Link)\nVue.component('GImage', Image)\nVue.component('ClientOnly', ClientOnly)\n\nVue.prototype.$url = url\nVue.prototype.$fetch = fetchPath\n\nrouter.beforeEach(graphqlGuard)\n\nconst context = {\n  appOptions: {\n    render: h => h(App, { attrs: { id: 'app' }}),\n    metaInfo: head,\n    methods: {},\n    data: {},\n    router\n  },\n  isServer: process.isServer,\n  isClient: process.isClient,\n  router,\n  head\n}\n\nrunPlugins(plugins)\n\nexport function runPlugins(plugins) {\n  for (const { run, options } of plugins) {\n    if (typeof run === 'function') {\n      run(Vue, options, context)\n    }\n  }\n}\n\nexport function runMain() {\n  const defaultExport = 'default'\n  if (main && typeof main[defaultExport] === 'function') {\n    main[defaultExport](Vue, context)\n  }\n}\n\nexport default function createApp() {\n  return {\n    app: new Vue(context.appOptions),\n    router\n  }\n}\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,OAAO,MAAM,wBAAwB;AAE5C,OAAO,KAAKC,IAAI,MAAM,QAAQ;AAC9B,OAAOC,GAAG,MAAM,WAAW;AAE3B,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,SAAS,MAAM,aAAa;AACnC,SAASC,GAAG,QAAQ,iBAAiB;AACrC,OAAOC,YAAY,MAAM,iBAAiB;AAC1C,OAAOC,YAAY,MAAM,iBAAiB;AAE1C,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,UAAU,MAAM,yBAAyB;AAEhDZ,GAAG,CAACa,KAAK,CAACJ,YAAY,CAAC;AACvBT,GAAG,CAACc,SAAS,CAAC,OAAO,EAAEJ,IAAI,CAAC;AAC5BV,GAAG,CAACc,SAAS,CAAC,QAAQ,EAAEH,KAAK,CAAC;AAC9BX,GAAG,CAACc,SAAS,CAAC,YAAY,EAAEF,UAAU,CAAC;AAEvCZ,GAAG,CAACe,SAAS,CAACC,IAAI,GAAGT,GAAG;AACxBP,GAAG,CAACe,SAAS,CAACE,MAAM,GAAGX,SAAS;AAEhCD,MAAM,CAACa,UAAU,CAACV,YAAY,CAAC;AAE/B,MAAMW,OAAO,GAAG;EACdC,UAAU,EAAE;IACVC,MAAM,EAAEC,CAAC,IAAIA,CAAC,CAACnB,GAAG,EAAE;MAAEoB,KAAK,EAAE;QAAEC,EAAE,EAAE;MAAM;IAAC,CAAC,CAAC;IAC5CC,QAAQ,EAAErB,IAAI;IACdsB,OAAO,EAAE,CAAC,CAAC;IACXC,IAAI,EAAE,CAAC,CAAC;IACRtB;EACF,CAAC;EACDuB,QAAQ,EAAEC,OAAO,CAACD,QAAQ;EAC1BE,QAAQ,EAAED,OAAO,CAACC,QAAQ;EAC1BzB,MAAM;EACND;AACF,CAAC;AAED2B,UAAU,CAAC9B,OAAO,CAAC;AAEnB,OAAO,SAAS8B,UAAUA,CAAC9B,OAAO,EAAE;EAClC,KAAK,MAAM;IAAE+B,GAAG;IAAEC;EAAQ,CAAC,IAAIhC,OAAO,EAAE;IACtC,IAAI,OAAO+B,GAAG,KAAK,UAAU,EAAE;MAC7BA,GAAG,CAAChC,GAAG,EAAEiC,OAAO,EAAEd,OAAO,CAAC;IAC5B;EACF;AACF;AAEA,OAAO,SAASe,OAAOA,CAAA,EAAG;EACxB,MAAMC,aAAa,GAAG,SAAS;EAC/B,IAAIjC,IAAI,IAAI,OAAOA,IAAI,CAACiC,aAAa,CAAC,KAAK,UAAU,EAAE;IACrDjC,IAAI,CAACiC,aAAa,CAAC,CAACnC,GAAG,EAAEmB,OAAO,CAAC;EACnC;AACF;AAEA,eAAe,SAASiB,SAASA,CAAA,EAAG;EAClC,OAAO;IACLC,GAAG,EAAE,IAAIrC,GAAG,CAACmB,OAAO,CAACC,UAAU,CAAC;IAChCf;EACF,CAAC;AACH"}]}