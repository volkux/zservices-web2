{"remainingRequest":"C:\\Users\\mjenn\\Desktop\\New folder\\zservices-web2\\node_modules\\babel-loader\\lib\\index.js??ref--1-1!C:\\Users\\mjenn\\Desktop\\New folder\\zservices-web2\\node_modules\\gridsome\\app\\utils\\helpers.js","dependencies":[{"path":"C:\\Users\\mjenn\\Desktop\\New folder\\zservices-web2\\node_modules\\gridsome\\app\\utils\\helpers.js","mtime":1678315670702},{"path":"C:\\Users\\mjenn\\Desktop\\New folder\\zservices-web2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1678315671046},{"path":"C:\\Users\\mjenn\\Desktop\\New folder\\zservices-web2\\node_modules\\babel-loader\\lib\\index.js","mtime":1678315671014}],"contextDependencies":[],"result":["import config from '~/.temp/config';\nconst re = new RegExp(`^${config.pathPrefix}/?`);\nexport function unslash(string) {\n  return string.replace(/^\\/+|\\/+$/g, '');\n}\nexport function unslashStart(string) {\n  return string.replace(/^\\/+/g, '');\n}\nexport function unslashEnd(string) {\n  return string.replace(/\\/+$/g, '');\n}\nexport function url(string = '/') {\n  return normalizePath(`${config.pathPrefix}/${string}`);\n}\nexport function stripPageParam(route) {\n  const {\n    path,\n    params: {\n      page\n    }\n  } = route;\n  const normalizedPath = unslashEnd(path);\n  const suffix = /\\/$/.test(path) ? '/' : '';\n  return page && /^\\d+$/.test(page) && /\\/\\d+$/.test(normalizedPath) ? `${normalizedPath.split('/').slice(0, -1).join('/')}${suffix}` || '/' : `${normalizedPath}${suffix}` || '/';\n}\nexport function stripPathPrefix(string) {\n  return '/' + unslashStart(string.replace(re, ''));\n}\nexport function parsePath(path) {\n  let pathname = path || '/';\n  let query = '';\n  let hash = '';\n  [pathname, hash = ''] = path.split('#');\n  [pathname, query = ''] = pathname.split('?');\n  return {\n    pathname,\n    query: query ? `?${query}` : '',\n    hash: hash ? `#${hash}` : ''\n  };\n}\nexport function normalizePath(path = '/') {\n  return `/${path}`.replace(/\\/+/g, '/');\n}\nexport const isMailtoLink = string => String(string).startsWith('mailto:');\nexport const isTelLink = string => String(string).startsWith('tel:');",{"version":3,"names":["config","re","RegExp","pathPrefix","unslash","string","replace","unslashStart","unslashEnd","url","normalizePath","stripPageParam","route","path","params","page","normalizedPath","suffix","test","split","slice","join","stripPathPrefix","parsePath","pathname","query","hash","isMailtoLink","String","startsWith","isTelLink"],"sources":["C:/Users/mjenn/Desktop/New folder/zservices-web2/node_modules/gridsome/app/utils/helpers.js"],"sourcesContent":["import config from '~/.temp/config'\n\nconst re = new RegExp(`^${config.pathPrefix}/?`)\n\nexport function unslash (string) {\n  return string.replace(/^\\/+|\\/+$/g, '')\n}\n\nexport function unslashStart (string) {\n  return string.replace(/^\\/+/g, '')\n}\n\nexport function unslashEnd (string) {\n  return string.replace(/\\/+$/g, '')\n}\n\nexport function url (string = '/') {\n  return normalizePath(`${config.pathPrefix}/${string}`)\n}\n\nexport function stripPageParam (route) {\n  const { path, params: { page }} = route\n  const normalizedPath = unslashEnd(path)\n  const suffix = /\\/$/.test(path) ? '/' : ''\n\n  return page && /^\\d+$/.test(page) && /\\/\\d+$/.test(normalizedPath)\n    ? `${normalizedPath.split('/').slice(0, -1).join('/')}${suffix}` || '/'\n    : `${normalizedPath}${suffix}` || '/'\n}\n\nexport function stripPathPrefix (string) {\n  return '/' + unslashStart(string.replace(re, ''))\n}\n\nexport function parsePath (path) {\n  let pathname = path || '/'\n  let query = ''\n  let hash = ''\n\n  ;[pathname, hash = ''] = path.split('#')\n  ;[pathname, query = ''] = pathname.split('?')\n\n  return {\n    pathname,\n    query: query ? `?${query}` : '',\n    hash: hash ? `#${hash}` : ''\n  }\n}\n\nexport function normalizePath (path = '/') {\n  return `/${path}`.replace(/\\/+/g, '/')\n}\n\nexport const isMailtoLink = string => String(string).startsWith('mailto:')\n\nexport const isTelLink = string => String(string).startsWith('tel:')"],"mappings":"AAAA,OAAOA,MAAM,MAAM,gBAAgB;AAEnC,MAAMC,EAAE,GAAG,IAAIC,MAAM,CAAE,IAAGF,MAAM,CAACG,UAAW,IAAG,CAAC;AAEhD,OAAO,SAASC,OAAOA,CAAEC,MAAM,EAAE;EAC/B,OAAOA,MAAM,CAACC,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC;AACzC;AAEA,OAAO,SAASC,YAAYA,CAAEF,MAAM,EAAE;EACpC,OAAOA,MAAM,CAACC,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC;AACpC;AAEA,OAAO,SAASE,UAAUA,CAAEH,MAAM,EAAE;EAClC,OAAOA,MAAM,CAACC,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC;AACpC;AAEA,OAAO,SAASG,GAAGA,CAAEJ,MAAM,GAAG,GAAG,EAAE;EACjC,OAAOK,aAAa,CAAE,GAAEV,MAAM,CAACG,UAAW,IAAGE,MAAO,EAAC,CAAC;AACxD;AAEA,OAAO,SAASM,cAAcA,CAAEC,KAAK,EAAE;EACrC,MAAM;IAAEC,IAAI;IAAEC,MAAM,EAAE;MAAEC;IAAK;EAAC,CAAC,GAAGH,KAAK;EACvC,MAAMI,cAAc,GAAGR,UAAU,CAACK,IAAI,CAAC;EACvC,MAAMI,MAAM,GAAG,KAAK,CAACC,IAAI,CAACL,IAAI,CAAC,GAAG,GAAG,GAAG,EAAE;EAE1C,OAAOE,IAAI,IAAI,OAAO,CAACG,IAAI,CAACH,IAAI,CAAC,IAAI,QAAQ,CAACG,IAAI,CAACF,cAAc,CAAC,GAC7D,GAAEA,cAAc,CAACG,KAAK,CAAC,GAAG,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,GAAG,CAAE,GAAEJ,MAAO,EAAC,IAAI,GAAG,GACpE,GAAED,cAAe,GAAEC,MAAO,EAAC,IAAI,GAAG;AACzC;AAEA,OAAO,SAASK,eAAeA,CAAEjB,MAAM,EAAE;EACvC,OAAO,GAAG,GAAGE,YAAY,CAACF,MAAM,CAACC,OAAO,CAACL,EAAE,EAAE,EAAE,CAAC,CAAC;AACnD;AAEA,OAAO,SAASsB,SAASA,CAAEV,IAAI,EAAE;EAC/B,IAAIW,QAAQ,GAAGX,IAAI,IAAI,GAAG;EAC1B,IAAIY,KAAK,GAAG,EAAE;EACd,IAAIC,IAAI,GAAG,EAAE;EAEZ,CAACF,QAAQ,EAAEE,IAAI,GAAG,EAAE,CAAC,GAAGb,IAAI,CAACM,KAAK,CAAC,GAAG,CAAC;EACvC,CAACK,QAAQ,EAAEC,KAAK,GAAG,EAAE,CAAC,GAAGD,QAAQ,CAACL,KAAK,CAAC,GAAG,CAAC;EAE7C,OAAO;IACLK,QAAQ;IACRC,KAAK,EAAEA,KAAK,GAAI,IAAGA,KAAM,EAAC,GAAG,EAAE;IAC/BC,IAAI,EAAEA,IAAI,GAAI,IAAGA,IAAK,EAAC,GAAG;EAC5B,CAAC;AACH;AAEA,OAAO,SAAShB,aAAaA,CAAEG,IAAI,GAAG,GAAG,EAAE;EACzC,OAAQ,IAAGA,IAAK,EAAC,CAACP,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC;AACxC;AAEA,OAAO,MAAMqB,YAAY,GAAGtB,MAAM,IAAIuB,MAAM,CAACvB,MAAM,CAAC,CAACwB,UAAU,CAAC,SAAS,CAAC;AAE1E,OAAO,MAAMC,SAAS,GAAGzB,MAAM,IAAIuB,MAAM,CAACvB,MAAM,CAAC,CAACwB,UAAU,CAAC,MAAM,CAAC"}]}